"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const events_1 = require("events");
const path_1 = require("path");
const fs_1 = require("fs");
const stream_1 = require("stream");
const fs_2 = require("./fs");
const writeFileStream = (file, body) => new Promise((resolve, reject) => {
    body.pipe(fs_1.createWriteStream(file))
        .once('error', reject)
        .once('finish', resolve);
});
class S3Mock extends events_1.EventEmitter {
    constructor(output, config = {}) {
        super();
        this.output = output;
        this.config = config;
    }
    putObject(params, callback) {
        const { Body, Bucket, Key } = params;
        const { region = 'undefined' } = this.config;
        if (!(Body instanceof stream_1.Readable)) {
            throw new Error('Body should be instance of Readable');
        }
        const dest = path_1.join(this.output, region, Bucket, Key);
        this.emit('putObject', params);
        const promise = fs_2.mkdirp(path_1.dirname(dest))
            .then(() => Promise.all([
            writeFileStream(dest, Body),
            fs_2.writeFile(`${dest}.json`, JSON.stringify(params, null, 2)),
        ]))
            .then(() => {
            if (callback) {
                callback();
            }
            return {};
        });
        return { promise: () => promise };
    }
}
exports.S3Mock = S3Mock;
