/// <reference types="node" />
import * as fs from 'fs';
export declare type MakeDirectoryOptions = number | string | fs.MakeDirectoryOptions | null;
export declare const stat: (filePath: fs.PathLike) => Promise<fs.Stats>;
export declare const mkdtemp: (prefix: string) => Promise<string>;
export declare const writeFile: (directoryPath: fs.PathLike, data: any, options?: string | {
    encoding?: string | null | undefined;
    mode?: string | number | undefined;
    flag?: string | undefined;
} | null | undefined) => Promise<void>;
export declare const readFile: (directoryPath: fs.PathLike, options?: string | {
    encoding?: string | null | undefined;
    flag?: string | undefined;
} | null | undefined) => Promise<string | Buffer>;
export declare const readdir: (directoryPath: fs.PathLike) => Promise<string[]>;
export declare const mkdir: (directoryPath: fs.PathLike, options?: string | number | fs.MakeDirectoryOptions | null | undefined) => Promise<void>;
export declare const mkdirp: (directoryPath: string, options?: string | number | fs.MakeDirectoryOptions | null | undefined) => Promise<void>;
